Լաբորատոր աշխատանք 6
Առաջադրանքներ

1. Գրել սկրիպտ, որը տրված թվի համար կարտածի հաղորդագրություն այն մասին,
արդյոք թիվը դրական է, բացասական, թե՝ 0։ Թիվը վավերացնել ռեգուլյար
արտահայտության միջոցով։ Պայմանների ստուգման համար օգտագործել [[ ]]
օպերատորը։

    // 1.sh
    #!/bin/bash

    read -p "Enter a number: " num

    if [[ $num -gt 0 ]]; then
        echo "The number is positive."
    elif [[ $num -lt 0 ]]; then
        echo "The number is negative."
    else
        echo "The number is 0."
    fi

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./1.sh
        Enter a number: 4
        The number is positive.

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./1.sh
        Enter a number: -2
        The number is negative.

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./1.sh
        Enter a number: 0
        The number is 0.


2. Կատարել 1-ին կետը՝ պայմանների ստուգման համար օգտագործելով (( ))
օպերատորը։

    // 2.sh
    #!/bin/bash

    read -p "Enter a number: " num

    if ((num > 0)); then
        echo "The number is positive."
    elif ((num < 0)); then
        echo "The number is negative."
    else
        echo "The number is 0."
    fi

3. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի և 5-ի բազմապատիկ է։

    // 3.sh
    #!/bin/bash

    read -p "Enter a number: " num

    if ((num % 2 == 0)) && ((num % 3 == 0)) && ((num % 5 == 0)); then
        echo "The number is a multiple of 2, 3, and 5."
    else
        echo "The number is not a multiple of 2, 3, and 5."
    fi


4. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի կամ 5-ի բազմապատիկ է։

    // 4.sh
    #!/bin/bash

    read -p "Enter a number: " num

    if ((num % 2 == 0)) || ((num % 3 == 0)) || ((num % 5 == 0)); then
        echo "The number is a multiple of 2, 3, or 5."
    else
        echo "The number is not a multiple of 2, 3, or 5."
    fi


5. Մեկ հրամանի միջոցով ստեղծել նոր ֆայլ և այդ ֆայլին ավելացնել կատարելու
թույլտվություն։
    
    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ touch new_file.txt && chmod +x new_file.txt


6. Մեկ հրամանի միջոցով ստուգել, թե արդյոք գոյություն ունի dir անունով դիրեկտորիա,
և, եթե գոյություն չունի, ապա ստեղծել։

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ [ -d "dir" ] || mkdir "dir"


7. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը գտնվում է սահմանված
միջակայքում։ Ստուգվող թիվը և միջակայքի սահմանների թվերը ներմուծել read
հրամանի միջոցով։ Իրականացնել տվյալների վավերացում։

    // 7.sh
    #!/bin/bash

    invalid_input () {
        if [[ $1 =~ ^-?[[:digit:]]+$ ]]; then
            echo "$1 is an integer."
        else
            echo "$1 is not an integer."
        fi

    }

    read -p "Enter a number: " num
    read -p "Enter the lower limit of the range: " lower
    read -p "Enter the upper limit of the range: " upper

    invalid_input $num
    invalid_input $lower
    invalid_input $upper


    if ((num >= lower)) && ((num <= upper)); then
        echo "The number is in the specified range."
    else
        echo "The number is outside the specified range."
    fi

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./7.sh
        Enter a number: 15
        Enter the lower limit of the range: 10
        Enter the upper limit of the range: i45
        15 is an integer.
        10 is an integer.
        i45 is not an integer.
        The number is outside the specified range.


8. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա մեկ բառ, և կստուգի արդյոք այն
համընկնում է "Secret" բառի հետ։ read հրամանը կատարել այնպես, որ ներմուծված
արժեք պահպանվի REPLY փոփոխականի մեջ, իսկ ներմուծումն իրականացնելիս
տառերը չցուցադրվեն էկրանին։

    // 8.sh
    #!/bin/bash

    read -s -p "Enter a word: " secret

    if [[ $secret == "Secret" ]]; then
        echo -e "\nYou entered the secret word."
    else
        echo -e "\nIncorrect word."
    fi

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./8.sh
        Enter a word:
        You entered the secret word.


9. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա ֆայլի անուն։ Վավերացնել
անունը հետևյալ կանոններով․ կարող է պարունակել տառեր, թվեր, - . _ սիմվոլները։
Եթե նման ֆայլ գոյություն չունի, ապա ստեղծել։ Ցուցադրել համապատասխան
հաղորդագրություն ֆայլի ստեղծման կամ առկայության մասին։

    // 9.sh
    #!/bin/bash

    read -p "Enter a file name: " filename

    # Validate the filename
    # if [[ "$filename" =~ ^[a-z0-9]*$ ]]; then

    if [[ "$filename" =~ ^[a-zA-Z0-9_.\-\]*$ ]]; then
        # Check if the file exists
        if [ -e "$filename" ]; then
            echo "The file '$filename' already exists."
        else
            touch "$filename"
            echo "The file '$filename' has been created."
        fi
    else
        echo "Invalid filename. It may contain letters, numbers, -, ., _ symbols."
    fi


10. Գրել <<Հաշվիչ>> ծրագիր, որը կստանա ճիշտ 3 արժեք հետևյալ հաջորդականությամբ․
թիվ, գործողություն, թիվ։ Օր՝ 2 + 3։ Ստուգել ներմուծված արժեքների քանակը, և 3-ից
տարբեր լինելու դեպքում արտածել հաղորդագրություն սխալի մասին։ Իրականացնել
արժեքների վավերացում։ Գործողության համար սահմանել հետևյալ ընդունելի
արժեքները․ + - * / **։ Արտածել գործողության արդյունքը։

    // 10.sh
    #!/bin/bash

    invalid_input () {
        if [[ $1 =~ ^-?[[:digit:]]+$ ]]; then
            echo "$1 is an integer."
        else
            echo "$1 is not an integer."
            exit 1 
        fi

        if [[ $2 =~ ^[-+\*/**]$ ]]; then
            echo "$2 is a right operator."
        else
            echo "$2 is not a right operator."
            exit 1
        fi

        if [[ $3 =~ ^-?[[:digit:]]+$ ]]; then
            echo "$3 is an integer."
        else
            echo "$3 is not an integer."
            exit 1
        fi

        if [[ $4 ]]; then
            echo "Too many variables."
            exit 1
        fi
    }

    answer(){

        result=$(($1 $2 $3))
        echo "Result: $result"

    }

    read -p "Enter: " 
    # ներմուծված տվյալները պահվում են REPLY փոփոխականի մեջ

    echo $REPLY
    invalid_input $REPLY

    answer $REPLY

    User@DESKTOP-UE467CN MINGW64 ~/Desktop/lab6
    $ ./10.sh
        Enter: 1 + 91
        1 + 91
        1 is an integer.
        + is a right operator.
        91 is an integer.
        Result: 92